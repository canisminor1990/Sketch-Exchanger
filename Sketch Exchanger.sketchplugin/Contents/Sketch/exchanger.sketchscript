function exchanger(context) {
	log('-> Running Plugin --------------------------------------------');
	var doc = context.document;

	var json2sketch = 'json-to-sketch.sh';
	var sketch2json = 'sketch-to-json.sh';

	var openDialog = NSOpenPanel.openPanel();
	openDialog.setCanChooseFiles(true);
	openDialog.setCanChooseDirectories(true);
	openDialog.setAllowsMultipleSelection(false);
	openDialog.setCanCreateDirectories(false);
	openDialog.setMessage('Choose `.sketch` or unziped folder...');

	var fileTypes = ['sketch'];
	var openPanelButtonPressed = openDialog.runModalForDirectory_file_types_(nil, nil, fileTypes);

	if (openPanelButtonPressed == NSFileHandlingPanelOKButton) {
		var filePath = openDialog.URL().path();
		log('-> Open File or Directory from: ' + filePath);

		if (-1 < filePath.indexOf('.sketch')) {
			log('-> Select Sketch File.')
			var isSketchFile    = true;
			var shellFile       = context.plugin.urlForResourceNamed(sketch2json).path();
			var notificationMsg = '🔌Exchanger: 😃Converted from the Sketch to configuration files!';
			var alertMsg        = 'Directory Exists.';
		} else {
			log('-> Select Directory.')
			var isSketchFile    = false;
			var shellFile       = context.plugin.urlForResourceNamed(json2sketch).path();
			var notificationMsg = '🔌Exchanger: 😃Converted from configuration files to the Sketch! The file is open...';
			var alertMsg        = 'Sketch File Exists.';
		}

		var fileManager = NSFileManager.defaultManager();
		var extension   = '';
		if (isSketchFile) {
			filePath = filePath.replace('.sketch', '');			
		} else {
			extension = '.sketch';
		}
		var responseCode = 1000;
		if (fileManager.fileExistsAtPath(filePath + extension)) {
			responseCode = showAlert(alertMsg);
		}

		if (1000 == responseCode) {
			runCommand('/bin/bash', [shellFile, filePath]);
			doc.showMessage(notificationMsg);

			if (!isSketchFile) {
				runCommand('/usr/bin/open', [filePath + extension]);
			}
			return true;

		} else {
			doc.showMessage('🔌Exchanger: ⛔️Cancelled.');
			return false;
		}

	} else {
		doc.showMessage('🔌Exchanger: ⛔️Cancelled.');
		return false;
	}

}

function runCommand(command, args) {
	var task = NSTask.new();
	task.setLaunchPath(command);
	task.setArguments(args);
	task.launch();
	task.waitUntilExit();
	return (task.terminationStatus() == 0);
}

function showAlert(msg) {
	var alert = NSAlert.new();
	alert.setMessageText(msg);
	alert.setInformativeText('Do you want to overwrite?');
	alert.addButtonWithTitle('OK');
	alert.addButtonWithTitle('Cancel');
	var responseCode = alert.runModal();

	return responseCode;
}