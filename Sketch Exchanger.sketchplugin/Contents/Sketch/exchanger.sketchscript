function exchanger(context) {
	log('-> Running Plugin --------------------------------------------');
	var doc = context.document;

	var json2sketch = 'json-to-sketch.sh';
	var sketch2json = 'sketch-to-json.sh';

	var openDialog = NSOpenPanel.openPanel();
	openDialog.setCanChooseFiles(true);
	openDialog.setCanChooseDirectories(true);
	openDialog.setAllowsMultipleSelection(false);
	openDialog.setCanCreateDirectories(false);
	openDialog.setMessage('Choose `.sketch` or unziped folder...');

	var fileTypes = ['sketch'];
	var openPanelButtonPressed = openDialog.runModalForDirectory_file_types_(nil, nil, fileTypes);

	if ( openPanelButtonPressed == NSFileHandlingPanelOKButton ) {
		var filePath = openDialog.URL().path();
		log('-> Open File or Directory from: ' + filePath);
		
		if(-1 != filePath.indexOf('.sketch')) {
			log('-> is Sketch File');

			filePath = filePath.replace('.sketch', '');
			var shellFile = context.plugin.urlForResourceNamed(sketch2json).path();

			runCommand('/bin/bash', [shellFile, filePath]);
			doc.showMessage('🔌Exchanger: ⭕️Converted from the Sketch to configuration files!');
		} else {
			log('-> is Directory');

			var shellFile = context.plugin.urlForResourceNamed(json2sketch).path();

			runCommand('/bin/bash', [shellFile, filePath]);
			doc.showMessage('🔌Exchanger: ⭕️from configuration files to the Sketch! The file is open...');
			runCommand('/usr/bin/open', [filePath + '.sketch']);
		}
	} else {
		doc.showMessage('🔌Exchanger: ⛔️Canceled.');
	}

}

function runCommand(command, args) {
	var task = NSTask.new();
	task.setLaunchPath(command);
	task.setArguments(args);
	task.launch();
	task.waitUntilExit();
	return (task.terminationStatus() == 0);
}
